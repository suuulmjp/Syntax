1. 처음 코드 작성 시.
    !(느낌표) 입력 후 엔터 
    하면
                    <!DOCTYPE html>
                    <html lang="en">
                    <head>
                        <meta charset="UTF-8">
                        <meta http-equiv="X-UA-Compatible" content="IE=edge">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <title>Document</title>
                    </head>
                    <body>
                        
                    </body>
                    </html>

    이러한 코드가 자동으로 생성 됨.

    이것이 html기본 문법
    head와 body가 존재함
    
    1.head는 눈에 보이지 않는 부분.
    2.body는 눈에 보이는 부분.
            
            주석입력 방법
            <!-- 주석으로 작성할 내용 입력 -->
            주석은 콘솔창에서 확인 가능하므로 민감한 사항등은 적으면 안됨.
    
    <title></title> 탭 이름.(인터넷창 이름-상단에 보여지는 부분)

    <style></style> html문서의 스타일 정보를 정의할 때 사용
                    div와 span을 정의. 이부분에 css언어가 들어감.

                    이 안에서의 우선순위
                    1.tag
                    2.id
                    3.class 순서 (직접 코드 작성하다보면 익히게 될 듯)


    ---------------------------------------------------------------- head부분

    이하 body부분

    [a태그]
    <a href="연결 할 주소" target="_blank"></a>     
                    1.주소 링크 연결, a태그로 감싸기.
                    2.target 속성
                        _blank  새로운 창 또는 탭에서 오픈(가장 많이 사용)
                        _self   현재창에서 오픈(기본값임, 생략가능)
                        _parent 현 위치의 부모프레임에서 오픈(최근 거의 사용 안함, ex)iframe 사용했을시 부모창이 바뀜)
                        _top    최상위치의 프레임에서 오픈

                        추가)
                        <a href="#id값"> 내용</a>
                        이렇게 입력 하면 해당 id값이 있는 위치로 스크롤이 이동함

                        추가2)
                        자바스크립트 함수 호출도 가능(함수란 특정 기능을 수행하는 것)
                        <a href="javascript:showAlert();">경고</a>
                            <script>
                            function showAlert() {
                                alert("띄울 메세지 내용");
                            }
                            </script>
                        이런식으로 button 태그와 비슷하게 만들어서 사용도 가능함


<b>적을 내용 입력</b> 굵은 글씨

    

    [form태그] - 사용자가 입력한 데이터를 서버로 보내기 위해 사용하는 태그(* 사용자 입력 데이터 - input, select, textarea 등에 입력된 값)
                자신이 감싸고 있는 입력값을 서버로 보내는 역할. 
                서버- 정보를 제공하는 호스트(host)

                클라이언트(사용자)가 요청을 하면, 서버는 그에 대한 응답으로 정보를 제공함.
                클라이언트가 어떤 요청을 보내는가에 따라 응답이 달라질수있음

                form의 목적은 사용자가 입력한 데이터를 (서버로) 보내는 것.

        form태그는 사용자가 입력한 요소들을 서버로 보낼 수 있음(전송 하는 것)
        
        전송하는 방법?
        type이 submit인 input요소를 사용함
        예) <input type="submit" value="로그인"></form>

    <form action="#" method="get">
    </form>
        action: 입력 값을 전송 할 서버의 url, url에는 서버프로그램의 주소나 파일명이 들어감
        method: 입력 값을 전송 할 때의 방식, GET 또는 POST 등의 값을 지정함

        GET     서버에 요청을 보내고 응답을 받아냄. 서버로부터 정보를 "가져온다"는 성격의 요청.
                서버에서 이미지 파일을 받아오거나 기상청의 날씨 정보 가져오기 등의 요청등에 사용 
        POST    서버에 요청을 보내서 서버가 어떤 작업을 수행하도록 만들고 싶을때 사용.
                서버에 있는 데이터를 "조작한다"는 성격의 요청.

    [input태그]
        input type으로 지정한 값이 각각 정해져있음
        text, password, email, number 등

        <button></button> 버튼 생성

    [h태그] h = heading
        <h1> ~ <h6> 제목, 1이 가장 큰 크기, 6이 가장 작은 크기
        h1태그는 페이지 당 1번만 사용
        h1태그를 사용 후 h3 혹은 h4 등으로 한번에 넘어 갈 수 없음. 순차적으로 사용 하는것을 원칙으로 함 

    [img태그] 이미지    이미지를 표시할 때 사용
        단일 태그로써 닫는태그가 필요없음
        이미지의 정보를 속성으로 지정해줘야함
        <img src="이미지 경로" width="가로(너비)" height="세로(높이)" alt="이미지설명" />
            단위없이 정수 값만 지정/ px(픽셀)단위로 지정 됨	가로,세로를 지정하지 않으면 원본 크기 그대로 적용 됨
            가로나 세로 중 하나만 지정해도 문제없이 출력 됨
            
            alt = alternative(대체 텍스트 역할을 함)-이미지가 로딩 되기 전이나 로딩 실패 시 이미지 대신 대체 텍스트가 표시 됨
                    이미지를 볼 수 없는 시각장애인을 위한 음성인식 서비스가능

    [iframe] 문서 안에 다른 문서를 가져오는 태그
                보안측면에서는 취약함- 코드에 sandbox 추가하는걸로 해결 
    <iframe src="http://소스의 주소"  height  = "높이" width = "너비"  frameborder="0" frameborder-style="">
                html상에서 height, width를 수정하는 것 보다 css에서 수정하는 것이 좋음
                frameborder- 외곽선 0=> 없음 1 =>있음 

    [p태그] paragraph- 단락
                p태그로 감싸주면 단락이 나뉨
    
    [div태그, span태그] 여러개의 태그를 하나로 그룹짓거나 공통적인 스타일을 지정하기 위해 사용 
                        정해진 역할이나 필수로 요구되는 속성이 없음
                        태그를 적용해도 다른 태그의 모양이나 배치를 변경하지 않는 비어있는 태그임

                        div 는 block    -margin으로 위아래 여백설정 가능
                        span은 inline   -margin으로 위아래 여백설정 불가능
                        
                            span태그를 block요소로 사용하고 싶을 때
                            display: block
                            반대로 div태그를 inline요소로 사용하고 싶을땐
                            display: inline

                        div와 span태그는 일반적으로 class와 id랑 함께 사용 
                        class, id = 쉽게 말해 태그에 이름을 붙이는 것.
                        
                        class 는 .
                        id는 # 을 앞에 붙여서
                         이름을 입력하고 가져옴(이름을 선택자로 사용)
                        ----head내의 style(css)부분에 작성

                        class와 id의 차이
                        둘 다 선택자로 사용된다는 점은 동일
                        class는 id보다 유연함
                                한번 선언되고 사용된 클래스를 다른 태그에도 중복사용 가능
                                하나의 태그에 여러개의 클래스를 지정할 수 있음

                        id는    문서 전체에서 딱 한번만 선언 되고 사용 할 수 있음
                                이미 사용하고 있는 id를 중복으로 사용 할 수 없음
                                태그 당 1개의 아이디만 적용 가능

                        하나의 태그에 class와 id를 같이 적용하는 것은 가능
                         
    [snippet]   스니펫
            미리 작성되어있는 코드가 자동으로 불러와짐(작성됨)
            !(느낌표) 엔터 하면 자동으로 완성 되는 코드 등..
            사용자가 직접 스니펫을 등록 할 수도 있음
            
            ul>li.item*3    이렇게 작성하면

            <ul>
                <li class="item"></li>
                <li class="item"></li>
                <li class="item"></li>
            </ul>                           이렇게 코드가 자동 완성됨

    